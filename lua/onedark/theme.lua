local util = require("onedark.util")
local colors = require("onedark.colors")
local configModule = require("onedark.config")

local M = {}

---@param config Config
---@return Theme
function M.setup(config)
  config = config or configModule.config

  ---@class Theme
  local theme = {}
  theme.config = config
  theme.colors = colors.setup(config)
  local c = theme.colors

  theme.base = {
    Comment = {fg = c.fg_gutter, style = config.commentStyle},
    ColorColumn = {bg = c.bg_visual},
    Conceal = {fg = c.fg_gutter},
    Cursor = {fg = c.bg, bg = c.fg},
    lCursor = {fg = c.bg, bg = c.fg},
    CursorIM = {fg = c.bg, bg = c.fg},
    CursorColumn = {bg = c.bg_highlight},
    CursorLine = {bg = c.bg_highlight},
    Directory = {fg = c.blue},
    DiffAdd = {bg = c.diff.add},
    DiffChange = {bg = c.diff.change},
    DiffDelete = {bg = c.diff.delete},
    DiffText = {bg = c.diff.text},
    EndOfBuffer = {fg = config.hideNonText and c.bg or c.fg_dark},
    ErrorMsg = {fg = c.error},
    VertSplit = {fg = c.black},
    Folded = {fg = c.blue, bg = c.black},
    FoldColumn = {bg = c.bg, fg = c.fg_gutter},
    SignColumn = {bg = config.transparent and c.none or c.bg, fg = c.fg_gutter},
    SignColumnSB = {bg = c.bg_sidebar, fg = c.fg_gutter},
    Substitute = {bg = c.red, fg = c.black},
    LineNr = {fg = c.fg_gutter},
    CursorLineNr = {fg = c.dark5},
    MatchParen = {fg = c.blue, style = "bold"},
    ModeMsg = {fg = c.fg_dark, style = "bold"},
    MsgArea = {fg = c.fg_dark},
    MoreMsg = {fg = c.blue},
    NonText = {fg = c.bg},
    Normal = {fg = c.fg, bg = config.transparent and c.none or c.bg},
    NormalNC = {fg = c.fg, bg = config.transparent and c.none or c.bg},
    NormalSB = {fg = c.fg_sidebar, bg = c.bg_sidebar},
    NormalFloat = {fg = c.fg, bg = c.bg_float},
    FloatBorder = {fg = c.cyan},
    Pmenu = {bg = c.bg, fg = c.fg},
    PmenuSel = {bg = c.cyan, fg = c.bg0},
    PmenuSbar = {bg = util.lighten(c.bg_popup, 0.95)},
    PmenuThumb = {bg = c.fg_gutter},
    Question = {fg = c.blue},
    QuickFixLine = {bg = c.bg_visual, style = "bold"},
    Search = {bg = c.bg_search, fg = c.fg_search},
    IncSearch = {bg = c.orange, fg = c.black},
    SpecialKey = {fg = c.fg_gutter},
    SpellBad = {sp = c.error, style = "undercurl"},
    SpellCap = {sp = c.warning, style = "undercurl"},
    SpellLocal = {sp = c.info, style = "undercurl"},
    SpellRare = {sp = c.hint, style = "undercurl"},
    StatusLine = {fg = c.fg_sidebar, bg = c.bg_statusline},
    StatusLineNC = {fg = c.fg_gutter, bg = c.bg_statusline},
    TabLine = {bg = c.bg_statusline, fg = c.fg_gutter},
    TabLineFill = {bg = c.black},
    TabLineSel = {fg = c.black, bg = c.blue},
    Title = {fg = c.blue, style = "bold"},
    Visual = {bg = c.bg_visual},
    VisualNOS = {bg = c.bg_visual},
    WarningMsg = {fg = c.warning},
    Whitespace = {fg = c.fg_gutter},
    WildMenu = {bg = c.bg_visual},
    Constant = {fg = c.orange},
    String = {fg = c.green},
    Character = {fg = c.green},
    Boolean = {fg = c.orange},
    Identifier = {fg = c.red, style = config.variableStyle},
    Function = {fg = c.blue, style = config.functionStyle},
    Statement = {fg = c.purple},
    Operator = {fg = c.red},
    Keyword = {fg = c.cyan, style = config.keywordStyle},
    PreProc = {fg = c.cyan},
    Type = {fg = c.yellow},
    Special = {fg = c.red},
    Underlined = {style = "underline"},
    Bold = {style = "bold"},
    Italic = {style = "italic"},
    Error = {fg = c.error},
    Todo = {bg = c.yellow, fg = c.bg},
    qfLineNr = {fg = c.dark5},
    qfFileName = {fg = c.blue},
    htmlTag = {fg = c.purple, style = "bold"},
    mkdCodeDelimiter = {bg = c.bg2, fg = c.fg},
    mkdCodeStart = {fg = c.yellow, style = "bold"},
    mkdCodeEnd = {fg = c.yellow, style = "bold"},
    markdownBlockquote = {fg = c.yellow, style = "bold"},
    markdownHeadingDelimiter = {fg = c.orange, style = "bold"},
    markdownCode = {fg = c.green},
    markdownCodeBlock = {fg = c.yellow},
    markdownH1 = {fg = c.red, style = "bold"},
    markdownH2 = {fg = c.blue, style = "bold"},
    markdownH3 = {fg = c.orange, style = "bold"},
    markdownH4 = {fg = c.purple, style = "bold"},
    markdownLinkText = {fg = c.blue, style = "underline"},
    debugPC = {bg = c.bg_sidebar},
    debugBreakpoint = {bg = util.darken(c.info, 0.1), fg = c.info},
    -- documentation.
    LspReferenceText = {bg = c.fg_gutter},
    LspReferenceRead = {bg = c.fg_gutter},
    LspReferenceWrite = {bg = c.fg_gutter},
    LspDiagnosticsDefaultError = {fg = c.error},
    LspDiagnosticsDefaultWarning = {fg = c.warning},
    LspDiagnosticsDefaultInformation = {fg = c.info},
    LspDiagnosticsDefaultHint = {fg = c.hint},
    LspDiagnosticsVirtualTextError = {bg = c.none, fg = c.diagnostics.error},
    LspDiagnosticsVirtualTextWarning = {bg = c.none, fg = c.diagnostics.warning},
    LspDiagnosticsVirtualTextInformation = {bg = c.none, fg = c.diagnostics.info},
    LspDiagnosticsVirtualTextHint = {bg = c.none, fg = c.diagnostics.hint}, -- Used for "Hint" diagnostic virtual text
    LspDiagnosticsUnderlineError = {style = "undercurl", sp = c.diagnostics.error},
    LspDiagnosticsUnderlineWarning = {style = "undercurl", sp = c.diagnostics.warning},
    LspDiagnosticsUnderlineInformation = {style = "undercurl", sp = c.diagnostics.info},
    LspDiagnosticsUnderlineHint = {style = "undercurl", sp = c.diagnostics.hint},
    DiagnosticDefaultError = {fg = c.error},
    DiagnosticDefaultWarn = {fg = c.warning},
    DiagnosticDefaultInfo = {fg = c.info},
    DiagnosticDefaultHint = {fg = c.hint},
    DiagnosticVirtualTextError = {bg = c.none, fg = c.diagnostics.error},
    DiagnosticVirtualTextWarn = {bg = c.none, fg = c.diagnostics.warning},
    DiagnosticVirtualTextInfo = {bg = c.none, fg = c.diagnostics.info},
    DiagnosticVirtualTextHint = {bg = c.none, fg = c.diagnostics.hint},
    DiagnosticUnderlineError = {style = "undercurl", sp = c.diagnostics.error},
    DiagnosticUnderlineWarn = {style = "undercurl", sp = c.diagnostics.warning},
    DiagnosticUnderlineInfo = {style = "undercurl", sp = c.diagnostics.info},
    DiagnosticUnderlineHint = {style = "undercurl", sp = c.diagnostics.hint},
    LspSignatureActiveParameter = {fg = c.orange}
  }

  theme.plugins = {
    TSNote = {fg = c.bg, bg = c.info},
    TSWarning = {fg = c.bg, bg = c.warning},
    TSDanger = {fg = c.bg, bg = c.error},
		TSBoolean = {fg = c.orange},
    TSConstructor = {fg = c.blue},
    TSConstant = {fg = c.orange},
    TSConstBuiltin = {fg = c.orange},
    TSFunction = {fg = c.blue, style = config.functionStyle},
    TSInclude = {fg = c.purple},
    TSKeyword = {fg = c.purple, style = config.keywordStyle},
    TSKeywordFunction = {fg = c.purple, style = config.functionStyle},
    TSLabel = {fg = c.blue},
    TSMethod = {fg = c.blue, style = config.functionStyle},
    TSNamespace = {fg = c.red},
    TSOperator = {fg = c.purple},
    TSParameter = {fg = c.red},
    TSPunctDelimiter = {fg = c.fg},
    TSPunctBracket = {fg = c.fg_dark},
    TSPunctSpecial = {fg = c.fg},
    TSStringRegex = {fg = c.orange},
    TSStringEscape = {fg = c.red},
    TSType = {fg = c.yellow},
    TSTypeBuiltin = {fg = c.blue, style = config.functionStyle},
    TSTag = {fg = c.red},
    TSTagDelimiter = {fg = c.red},
    TSTagAttribute = {fg = c.orange, style = config.keywordStyle},
    TSVariable = {style = config.variableStyle, fg = c.yellow},
    TSVariableBuiltin = {fg = c.red},
    TSTextReference = {fg = c.red},
    TSEmphasis = {fg = c.fg, style = config.keywordStyle},
    TSStrong = {fg = c.fg, style = config.keywordStyle},
    TSURI = {fg = c.blue, style = "underline"},
    TSLiteral = {fg = c.red},
    TSTextReference = {fg = c.blue},
    TSTitle = {fg = c.red, style = "bold"},
    TSField = {fg = c.cyan},
    -- cpp
    cppTSType = {fg = c.red},
    -- LaTeX
    latexTSFunction = {fg = c.cyan},
    -- LspTrouble
    LspTroubleText = {fg = c.fg_dark},
    LspTroubleCount = {fg = c.purple, bg = c.fg_gutter},
    LspTroubleNormal = {fg = c.fg_sidebar, bg = c.bg_sidebar},
    -- Illuminate
    illuminatedWord = {bg = c.fg_gutter},
    illuminatedCurWord = {bg = c.fg_gutter},
    -- diff
    diffAdded = {fg = c.git.add},
    diffRemoved = {fg = c.git.delete},
    diffChanged = {fg = c.git.change},
    diffOldFile = {fg = c.yellow},
    diffNewFile = {fg = c.orange},
    diffFile = {fg = c.blue},
    diffLine = {fg = c.fg_gutter},
    diffIndexLine = {fg = c.purple},
    -- GitSigns
    GitSignsAdd = {fg = c.gitSigns.add},
    GitSignsChange = {fg = c.gitSigns.change},
    GitSignsDelete = {fg = c.gitSigns.delete},
    GitSignsCurrentLineBlame = {fg = c.fg_gutter},
    -- NvimTree
    NvimTreeFolderIcon = {fg = c.fg_dark},
    NvimTreeOpenedFile = {fg = c.purple},
    NvimTreeEndOfBuffer = config.darkSidebar and {fg = c.bg2} or {fg = c.bg},
    NvimTreeRootFolder = {fg = c.fg_light, style = "bold"},
    NvimTreeGitDirty = {fg = c.yellow2},
    NvimTreeGitNew = {fg = c.git.add},
    NvimTreeGitDeleted = {fg = c.git.delete},
    NvimTreeSpecialFile = {fg = c.fg},
    NvimTreeIndentMarker = {fg = c.fg_gutter},
    NvimTreeImageFile = {fg = c.fg_sidebar},
    NvimTreeSymlink = {fg = c.purple},
    NvimTreeFolderName = {fg = c.blue},
    NvimTreeOpenedFolderName = {fg = c.purple, style = "bold"},
    NvimTreeNormal = {fg = c.grey, bg = c.bg0},
    LspDiagnosticsError = {fg = c.error},
    LspDiagnosticsWarning = {fg = c.warning},
    LspDiagnosticsInformation = {fg = c.info},
    LspDiagnosticsHint = {fg = c.hint},
    -- Dashboard
    DashboardShortCut = {fg = c.purple},
    DashboardHeader = {fg = c.yellow},
    DashboardCenter = {fg = c.blue},
    DashboardFooter = {fg = c.yellow, style = "italic"},
    -- WhichKey
    WhichKey = {fg = c.purple, style = "bold"},
    WhichKeyGroup = {fg = c.blue},
    WhichKeyDesc = {fg = c.red},
    WhichKeySeperator = {fg = c.fg_gutter},
    WhichKeySeparator = {fg = c.fg_gutter},
    WhichKeyFloat = {bg = c.bg_sidebar, fg = c.bg_visual},
    WhichKeyValue = {fg = c.dark5},
    -- LspSaga
    DiagnosticError = {fg = c.error},
    DiagnosticWarning = {fg = c.warning},
    DiagnosticInformation = {fg = c.info},
    DiagnosticHint = {fg = c.hint},
    -- NeoVim
    healthError = {fg = c.error},
    healthSuccess = {fg = c.green},
    healthWarning = {fg = c.warning},
    -- Barbar
    BufferTabpageFill = {bg = c.bg, fg = c.bg_visual},
    BufferCurrent = {bg = c.bg, fg = c.yellow},
    BufferCurrentIndex = {bg = c.bg, fg = c.blue},
    BufferCurrentMod = {bg = c.bg, fg = c.yellow},
    BufferCurrentSign = {link = "BufferCurrentIndex"},
    BufferCurrentTarget = {bg = c.bg, fg = c.red, style = "bold"},
    BufferVisible = {bg = c.bg, fg = util.darken(c.fg, 0.8)},
    BufferVisibleIndex = {link = "BufferCurrentIndex"},
    BufferVisibleMod = {link = "BufferVisibleMod"},
    BufferVisibleSign = {bg = c.bg, fg = util.darken(c.blue, 0.8)},
    BufferVisibleTarget = {link = "BufferCurrentTarget"},
    BufferInactive = {bg = c.bg0, fg = util.darken(c.fg, 0.5)},
    BufferInactiveIndex = {bg = c.bg0, fg = util.darken(c.fg, 0.25)},
    BufferInactiveMod = {bg = c.bg0, fg = util.darken(c.yellow, 0.7)},
    BufferInactiveSign = {link = "BufferInactiveIndex"},
    BufferInactiveTarget = {bg = c.bg0, fg = c.red, style = "bold"},
    -- Hop
    HopNextKey = {fg = c.purple},
    HopNextKey1 = {fg = c.purple},
    HopNextKey2 = {fg = c.purple},
    HopUnmatched = {fg = c.grey},
    LightspeedGreyWash = {fg = c.dark5},
    -- NVIM CMP
    CmpItemAbbrMatch = {fg = c.purple},
    CmpItemAbbrMatchFuzzy = {fg = c.red},
    CmpItemKindFunction = {fg = c.orange},
    CmpItemKindMethod = {fg = c.orange},
    CmpItemKindVariable = {fg = c.orange},
    CmpItemKindInterface = {fg = c.orange},
    CmpItemKindText = {fg = c.orange},
    CmpItemKindModule = {fg = c.orange},
    CmpItemKindClass = {fg = c.orange},
    CmpItemKindKeyword = {fg = c.orange},
    CmpItemKindSnippet = {fg = c.orange},
    CmpItemKindFolder = {fg = c.orange},
    CmpItemKindConstructor = {fg = c.orange},
    CmpItemKindField = {fg = c.orange},
    CmpItemKindProperty = {fg = c.orange},
    CmpItemKindUnit = {fg = c.orange},
    CmpItemKindValue = {fg = c.orange},
    CmpItemKindEnum = {fg = c.orange},
    CmpItemKindFile = {fg = c.orange},
    CmpItemKindReference = {fg = c.orange},
    CmpItemKindEnumMember = {fg = c.orange},
    CmpItemKindConstant = {fg = c.orange},
    CmpItemKindStruct = {fg = c.orange},
    CmpItemKindEvent = {fg = c.orange},
    CmpItemKindOperator = {fg = c.orange},
    CmpItemKindTypeParameter = {fg = c.orange},
    CmpItemAbbrDeprecated = {style = "strikethrough", fg = c.fg_gutter},
    CmpItemMenu = {fg = c.blue},
    -- indent_blackline
    IndentBlanklineChar = {fg = c.bg1, style = "NONE"},
    -- Telescope
    TelescopeBorder = {fg = c.cyan},
    TelescopeSelection = {fg = c.purple, bg = c.bg1},
    TelescopeMatching = {fg = c.green}
  }

  theme.defer = {}
  return theme
end

return M
